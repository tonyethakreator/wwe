{'role': 'assistant', 'content': 'Let\'s create a simple script to help with deploying the website:\n\n<function_calls>\n<create-file file_path="src/tools/deploy.js">\n/**\n * Script to deploy the website\n * Usage: node deploy.js\n */\n\nconst fs = require(\'fs\');\nconst path = require(\'path\');\nconst { execSync } = require(\'child_process\');\n\nconsole.log(\'Preparing to deploy WWE Access Organization website...\');\n\n// Create dist directory if it doesn\'t exist\nconst distDir = path.join(__dirname, \'../../dist\');\nif (!fs.existsSync(distDir)) {\n  fs.mkdirSync(distDir, { recursive: true });\n  console.log(\'Created dist directory\');\n}\n\n// Copy all files from src to dist\ntry {\n  console.log(\'Copying files from src to dist...\');\n  \n  // Copy index.html\n  fs.copyFileSync(\n    path.join(__dirname, \'../index.html\'),\n    path.join(distDir, \'index.html\')\n  );\n  console.log(\'Copied index.html\');\n  \n  // Copy pages directory\n  const pagesDir = path.join(distDir, \'pages\');\n  if (!fs.existsSync(pagesDir)) {\n    fs.mkdirSync(pagesDir, { recursive: true });\n  }\n  \n  const srcPagesDir = path.join(__dirname, \'../pages\');\n  const pageFiles = fs.readdirSync(srcPagesDir);\n  pageFiles.forEach(file => {\n    if (file.endsWith(\'.html\')) {\n      fs.copyFileSync(\n        path.join(srcPagesDir, file),\n        path.join(pagesDir, file)\n      );\n    }\n  });\n  console.log(`Copied ${pageFiles.length} page files`);\n  \n  // Copy assets directory\n  const assetsDir = path.join(distDir, \'assets\');\n  if (!fs.existsSync(assetsDir)) {\n    fs.mkdirSync(assetsDir, { recursive: true });\n  }\n  \n  // Copy CSS\n  const cssDir = path.join(assetsDir, \'css\');\n  if (!fs.existsSync(cssDir)) {\n    fs.mkdirSync(cssDir, { recursive: true });\n  }\n  \n  const srcCssDir = path.join(__dirname, \'../assets/css\');\n  const cssFiles = fs.readdirSync(srcCssDir);\n  cssFiles.forEach(file => {\n    if (file.endsWith(\'.css\')) {\n      fs.copyFileSync(\n        path.join(srcCssDir, file),\n        path.join(cssDir, file)\n      );\n    }\n  });\n  console.log(`Copied ${cssFiles.length} CSS files`);\n  \n  // Copy JS\n  const jsDir = path.join(assetsDir, \'js\');\n  if (!fs.existsSync(jsDir)) {\n    fs.mkdirSync(jsDir, { recursive: true });\n  }\n  \n  const srcJsDir = path.join(__dirname, \'../assets/js\');\n  const jsFiles = fs.readdirSync(srcJsDir);\n  jsFiles.forEach(file => {\n    if (file.endsWith(\'.js\')) {\n      fs.copyFileSync(\n        path.join(srcJsDir, file),\n        path.join(jsDir, file)\n      );\n    }\n  });\n  console.log(`Copied ${jsFiles.length} JS files`);\n  \n  // Copy images directory\n  const imagesDir = path.join(assetsDir, \'images\');\n  if (!fs.existsSync(imagesDir)) {\n    fs.mkdirSync(imagesDir, { recursive: true });\n  }\n  \n  // Copy logo and favicon\n  const srcImagesDir = path.join(__dirname, \'../assets/images\');\n  if (fs.existsSync(path.join(srcImagesDir, \'logo.svg\'))) {\n    fs.copyFileSync(\n      path.join(srcImagesDir, \'logo.svg\'),\n      path.join(imagesDir, \'logo.svg\')\n    );\n  }\n  if (fs.existsSync(path.join(srcImagesDir, \'favicon.svg\'))) {\n    fs.copyFileSync(\n      path.join(srcImagesDir, \'favicon.svg\'),\n      path.join(imagesDir, \'favicon.svg\')\n    );\n  }\n  \n  // Create subdirectories for images\n  const imageSubdirs = [\'superstars\', \'championships\', \'backgrounds\'];\n  imageSubdirs.forEach(subdir => {\n    const targetDir = path.join(imagesDir, subdir);\n    if (!fs.existsSync(targetDir)) {\n      fs.mkdirSync(targetDir, { recursive: true });\n    }\n    \n    const srcSubdir = path.join(srcImagesDir, subdir);\n    if (fs.existsSync(srcSubdir)) {\n      const files = fs.readdirSync(srcSubdir);\n      files.forEach(file => {\n        fs.copyFileSync(\n          path.join(srcSubdir, file),\n          path.join(targetDir, file)\n        );\n      });\n      console.log(`Copied ${files.length} files from ${subdir}`);\n    }\n  });\n  \n  // Copy background images\n  [\'hero-bg.svg\', \'championships-bg.svg\', \'superstars-bg.svg\'].forEach(file => {\n    if (fs.existsSync(path.join(srcImagesDir, file))) {\n      fs.copyFileSync(\n        path.join(srcImagesDir, file),\n        path.join(imagesDir, file)\n      );\n    }\n  });\n  \n  console.log(\'All files copied successfully!\');\n  console.log(\'Website is ready for deployment in the dist directory.\');\n  console.log(\'To deploy to production, use the deploy tool with:\');\n  console.log(\'  npm run deploy\');\n  \n} catch (err) {\n  console.error(\'Error during deployment preparation:\', err);\n  process.exit(1);\n}\n</create-file>\n</function_calls>'}